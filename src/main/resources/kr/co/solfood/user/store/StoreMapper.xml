<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solfood.user.store.StoreMapper">

   <!-- 전체 목록 조회 -->
    <select id="selectAllStore" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT 
            s.store_id,
            s.store_name, 
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_avgstar, 
            s.store_mainimage,
            s.store_address,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        ORDER BY s.store_avgstar DESC, s.store_id DESC
    </select>

    <!-- 가게 ID로 가게 정보 조회 -->
    <select id="getStoreById" parameterType="int" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        WHERE s.store_id = #{storeId}
    </select>

    <!-- 카테고리별 조회 (성능 개선: 인덱스 활용하도록 수정) -->
    <select id="selectCategoryStore" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT 
            s.store_id,
            s.store_name, 
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory, 
            s.store_avgstar, 
            s.store_mainimage,
            s.store_address,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="category != null and category != '' and category != '전체'">
                AND COALESCE(c.category_name, '전체') LIKE CONCAT(#{category}, '%')
            </if>
        </where>
        ORDER BY s.store_avgstar DESC, s.store_id DESC
        LIMIT 100
    </select>

    <!-- 통합 검색: 가게명, 주소, 카테고리에서 검색 -->
    <select id="searchStores" parameterType="string" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT 
            s.store_id,
            s.store_name, 
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory, 
            s.store_avgstar, 
            s.store_mainimage,
            s.store_address,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    s.store_name LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_address LIKE CONCAT('%', #{keyword}, '%')
                    OR COALESCE(c.category_name, '전체') LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_intro LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        ORDER BY 
            CASE
                WHEN s.store_name LIKE CONCAT(#{keyword}, '%') THEN 1
                WHEN s.store_name LIKE CONCAT('%', #{keyword}, '%') THEN 2
                WHEN COALESCE(c.category_name, '전체') LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN s.store_address LIKE CONCAT('%', #{keyword}, '%') THEN 4
                ELSE 5
            END,
            s.store_avgstar DESC,
            s.store_id DESC
        LIMIT 100
    </select>

    <!-- 가게명으로 검색 -->
    <select id="searchStoresByName" parameterType="string" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT 
            s.store_id,
            s.store_name, 
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory, 
            s.store_avgstar, 
            s.store_mainimage,
            s.store_address,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="storeName != null and storeName != ''">
                AND s.store_name LIKE CONCAT('%', #{storeName}, '%')
            </if>
        </where>
        ORDER BY 
            CASE
                WHEN s.store_name LIKE CONCAT(#{storeName}, '%') THEN 1
                WHEN s.store_name LIKE CONCAT('%', #{storeName}, '%') THEN 2
                ELSE 3
            END,
            s.store_avgstar DESC,
            s.store_id DESC
        LIMIT 50
    </select>

    <!-- 주소로 검색 -->
    <select id="searchStoresByAddress" parameterType="string" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT 
            s.store_id,
            s.store_name, 
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory, 
            s.store_avgstar, 
            s.store_mainimage,
            s.store_address,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="address != null and address != ''">
                AND s.store_address LIKE CONCAT('%', #{address}, '%')
            </if>
        </where>
        ORDER BY 
            CASE
                WHEN s.store_address LIKE CONCAT(#{address}, '%') THEN 1
                WHEN s.store_address LIKE CONCAT('%', #{address}, '%') THEN 2
                ELSE 3
            END,
            s.store_avgstar DESC,
            s.store_id DESC
        LIMIT 50
    </select>

    <!-- 새 가게 정보 추가 (크롤링용) -->
    <insert id="insertStore" parameterType="kr.co.solfood.user.store.StoreVO">
        INSERT INTO store (
            store_name, 
            store_address, 
            store_latitude, 
            store_longitude, 
            store_avgstar, 
            store_intro, 
            store_mainimage, 
            category_id, 
            store_tel
        ) VALUES (
            #{storeName}, 
            #{storeAddress}, 
            #{storeLatitude}, 
            #{storeLongitude}, 
            #{storeAvgstar}, 
            #{storeIntro}, 
            #{storeMainimage}, 
            #{categoryId}, 
            #{storeTel}
        )
    </insert>

    <!-- 중복 체크용 쿼리 -->
    <select id="countByNameAndAddress" resultType="int">
        SELECT COUNT(*)
        FROM store
        WHERE store_name = #{storeName} 
        AND store_address = #{storeAddress}
    </select>

    <!-- 페이징 처리 - 전체 및 카테고리별 통합 -->
    <select id="selectPagedCategoryStores" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="category != null and category != '' and category != '전체'">
                AND COALESCE(c.category_name, '전체') LIKE CONCAT(#{category}, '%')
            </if>
        </where>
        ORDER BY s.store_avgstar DESC, s.store_id DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="countAllStores" resultType="long">
        SELECT COUNT(*) FROM store
    </select>

    <select id="countStoresByCategory" resultType="long">
        SELECT COUNT(*) FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="category != null and category != '' and category != '전체'">
                AND COALESCE(c.category_name, '전체') LIKE CONCAT(#{category}, '%')
            </if>
        </where>
    </select>

    <!-- 검색 결과 페이징 처리 ( 이 부분은 검색 카테고리 선택 후 분류하는 것으로 개선 예정입니다. )-->
    <select id="selectPagedSearchResults" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    s.store_name LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_address LIKE CONCAT('%', #{keyword}, '%')
                    OR COALESCE(c.category_name, '전체') LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_intro LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        ORDER BY 
            CASE
                WHEN s.store_name LIKE CONCAT(#{keyword}, '%') THEN 1
                WHEN s.store_name LIKE CONCAT('%', #{keyword}, '%') THEN 2
                WHEN COALESCE(c.category_name, '전체') LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN s.store_address LIKE CONCAT('%', #{keyword}, '%') THEN 4
                ELSE 5
            END,
            s.store_avgstar DESC,
            s.store_id DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="countSearchResults" resultType="long">
        SELECT COUNT(*) FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    s.store_name LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_address LIKE CONCAT('%', #{keyword}, '%')
                    OR COALESCE(c.category_name, '전체') LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_intro LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
    </select>

    <!-- ========================= 찜 상태 포함 쿼리들 ========================= -->
    
    <!-- 가게 상세 조회 (찜 상태 포함) -->
    <select id="getStoreByIdWithLike" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel,
            CASE WHEN ul.users_id IS NOT NULL THEN true ELSE false END as liked
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        LEFT JOIN user_likes ul ON s.store_id = ul.store_id AND ul.users_id = #{usersId}
        WHERE s.store_id = #{storeId}
    </select>

    <!-- 페이징 처리 - 카테고리별 (찜 상태 포함) -->
    <select id="selectPagedCategoryStoresWithLike" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel,
            CASE WHEN ul.users_id IS NOT NULL THEN true ELSE false END as liked
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        LEFT JOIN user_likes ul ON s.store_id = ul.store_id AND ul.users_id = #{usersId}
        <where>
            <if test="category != null and category != '' and category != '전체'">
                AND COALESCE(c.category_name, '전체') LIKE CONCAT(#{category}, '%')
            </if>
        </where>
        ORDER BY s.store_avgstar DESC, s.store_id DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 검색 결과 페이징 처리 (찜 상태 포함) -->
    <select id="selectPagedSearchResultsWithLike" resultType="kr.co.solfood.user.store.StoreVO">
        SELECT
            s.store_id,
            s.store_name,
            s.store_address,
            s.store_latitude,
            s.store_longitude,
            s.store_avgstar,
            s.store_intro,
            s.store_mainimage,
            s.category_id,
            COALESCE(c.category_name, '전체') as storeCategory,
            s.store_tel,
            CASE WHEN ul.users_id IS NOT NULL THEN true ELSE false END as liked
        FROM store s
        LEFT JOIN category c ON s.category_id = c.category_id
        LEFT JOIN user_likes ul ON s.store_id = ul.store_id AND ul.users_id = #{usersId}
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    s.store_name LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_address LIKE CONCAT('%', #{keyword}, '%')
                    OR COALESCE(c.category_name, '전체') LIKE CONCAT('%', #{keyword}, '%')
                    OR s.store_intro LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        ORDER BY
            CASE
                WHEN s.store_name LIKE CONCAT(#{keyword}, '%') THEN 1
                WHEN s.store_name LIKE CONCAT('%', #{keyword}, '%') THEN 2
                WHEN COALESCE(c.category_name, '전체') LIKE CONCAT(#{keyword}, '%') THEN 3
                WHEN s.store_address LIKE CONCAT('%', #{keyword}, '%') THEN 4
                ELSE 5
            END,
            s.store_avgstar DESC,
            s.store_id DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

</mapper>